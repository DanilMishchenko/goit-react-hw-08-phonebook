{"version":3,"file":"static/js/register-view.d2da8f35.chunk.js","mappings":"kMAEaA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,SAAC,IAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAnE,SACGJ,M,yKCEMK,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MASXC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAEHG,IAAI,GAAI,oDACRC,SAAS,YACZC,MAAOL,EAAAA,KAAaK,MAAM,4BAA4BD,SAAS,YAC/DE,SAAUN,EAAAA,KAEPO,IAAI,EAAG,iCACPH,SAAS,YACZI,gBAAiBR,EAAAA,KAEdS,MAAM,CAACT,EAAAA,GAAQ,aAAc,wBAC7BI,SAAS,cAGd,OACE,SAACM,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,SAAC,KAAD,CACEC,cA1BgB,CACpBV,KAAM,GACNG,MAAO,GACPC,SAAU,GACVE,gBAAiB,IAuBbK,SAAU,SAACC,EAAOC,GAChB,IAAQb,EAA0BY,EAA1BZ,KAAMG,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SACrBS,EAAQC,YACRrB,EAASsB,EAAAA,GAAAA,SAAwB,CAAEf,KAAAA,EAAMG,MAAAA,EAAOC,SAAAA,KAChDT,EAAS,WAEXqB,gBAAc,EACdnB,iBAAkBA,EAClBoB,iBAAe,EAVjB,SAYG,gBACCC,EADD,EACCA,OACAC,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aACAC,EAPD,EAOCA,QAPD,OASC,SAAC,KAAD,CAAMb,SAAUY,EAAhB,UACE,UAACE,EAAA,EAAD,CAAOC,QAAS,EAAhB,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,OACNC,KAAK,OACL7B,KAAK,OACL8B,MAAOX,EAAOnB,MAAQoB,EAAQpB,KAC9B+B,SAAUV,EACVW,OAAQV,EACRV,MAAOM,EAAOlB,OAEfmB,EAAOnB,MAAQoB,EAAQpB,OAAQ,uBAAImB,EAAOnB,QAE3C,SAAC2B,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACL7B,KAAK,QACL8B,MAAOX,EAAOhB,OAASiB,EAAQjB,MAC/B4B,SAAUV,EACVW,OAAQV,EACRV,MAAOM,EAAOf,QAEfgB,EAAOhB,OAASiB,EAAQjB,QAAS,uBAAIgB,EAAOhB,SAE7C,SAACwB,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACL7B,KAAK,WACL8B,MAAOX,EAAOf,UAAYgB,EAAQhB,SAClC2B,SAAUV,EACVW,OAAQV,EACRV,MAAOM,EAAOd,WAEfe,EAAOf,UAAYgB,EAAQhB,WAAY,uBAAIe,EAAOf,YAEnD,SAACuB,EAAA,EAAD,CACEC,MAAM,oBACNC,KAAK,WACL7B,KAAK,kBACL8B,MAAOX,EAAOb,iBAAmBc,EAAQd,gBACzCyB,SAAUV,EACVW,OAAQV,EACRV,MAAOM,EAAOZ,kBAEfa,EAAOb,iBAAmBc,EAAQd,kBACjC,uBAAIa,EAAOb,mBAGb,SAAC2B,EAAA,EAAD,CAAQ5C,QAAQ,YAAY6C,UAAWV,EAASK,KAAK,SAArD,iC,SCtGC,SAASM,IACtB,OACE,iCACE,SAACjD,EAAA,EAAD,CAAOC,KAAM,oBACb,SAACK,EAAD","sources":["components/Title/Title.js","components/RegisterForm/RegisterForm.js","views/RegisterView.js"],"sourcesContent":["import { Typography } from '@mui/material';\n\nexport const Title = ({ text }) => {\n  return (\n    <Typography align=\"center\" variant=\"h3\" component=\"h1\" gutterBottom>\n      {text}\n    </Typography>\n  );\n};\n","import { Formik, Form } from 'formik';\nimport { TextField, Container, Button, Stack } from '@mui/material';\nimport * as yup from 'yup';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  };\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .max(30, 'The name is too long, please enter another name.')\n      .required('Required'),\n    email: yup.string().email('Incorrect E-Mail Address').required('Required'),\n    password: yup\n      .string()\n      .min(6, 'Minimum 6 characters required')\n      .required('Required'),\n    confirmPassword: yup\n      .string()\n      .oneOf([yup.ref('password')], 'Passwords must match')\n      .required('Required'),\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(value, actions) => {\n          const { name, email, password } = value;\n          actions.resetForm();\n          dispatch(authOperations.register({ name, email, password }));\n          navigate('/login');\n        }}\n        validateOnBlur\n        validationSchema={validationSchema}\n        validateOnMount\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isValid,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Stack spacing={2}>\n              <TextField\n                label=\"Name\"\n                type=\"name\"\n                name=\"name\"\n                error={errors.name && touched.name}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.name}\n              />\n              {errors.name && touched.name && <p>{errors.name}</p>}\n\n              <TextField\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                error={errors.email && touched.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && <p>{errors.email}</p>}\n\n              <TextField\n                label=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                error={errors.password && touched.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && <p>{errors.password}</p>}\n\n              <TextField\n                label=\"Re-enter password\"\n                type=\"password\"\n                name=\"confirmPassword\"\n                error={errors.confirmPassword && touched.confirmPassword}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.confirmPassword}\n              />\n              {errors.confirmPassword && touched.confirmPassword && (\n                <p>{errors.confirmPassword}</p>\n              )}\n\n              <Button variant=\"contained\" disabled={!isValid} type=\"submit\">\n                Continue\n              </Button>\n            </Stack>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Title } from 'components/Title/Title';\n\nexport default function RegisterView() {\n  return (\n    <>\n      <Title text={'Create account'} />\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["Title","text","align","variant","component","gutterBottom","RegisterForm","dispatch","useDispatch","navigate","useNavigate","validationSchema","yup","shape","name","max","required","email","password","min","confirmPassword","oneOf","Container","maxWidth","initialValues","onSubmit","value","actions","resetForm","authOperations","validateOnBlur","validateOnMount","values","errors","touched","handleChange","handleBlur","handleSubmit","isValid","Stack","spacing","TextField","label","type","error","onChange","onBlur","Button","disabled","RegisterView"],"sourceRoot":""}