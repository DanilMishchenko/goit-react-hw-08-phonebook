{"version":3,"file":"static/js/login-view.74f419f5.chunk.js","mappings":"kMAEaA,EAAQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OACE,SAAC,IAAD,CAAYC,MAAM,SAASC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAAnE,SACGJ,M,+JCCMK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAoBC,EAAAA,KAAaC,MAAM,CAC3CC,MAAOF,EAAAA,KAAaE,MAAM,4BAA4BC,SAAS,YAC/DC,SAAUJ,EAAAA,KAAaG,SAAS,cAGlC,OACE,SAACE,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,SAAC,KAAD,CACEC,cAAe,CACbL,MAAO,GACPE,SAAU,IAEZI,SAAU,SAACC,EAAOC,GAChB,IAAQR,EAAoBO,EAApBP,MAAOE,EAAaK,EAAbL,SACfP,EAASc,EAAAA,GAAAA,MAAqB,CAAET,MAAAA,EAAOE,SAAAA,KACvCM,EAAQE,aAEVC,gBAAc,EACdC,iBAAkBf,EAXpB,SAaG,gBACCgB,EADD,EACCA,OACAC,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,WACAC,EAND,EAMCA,aAND,OAQC,SAAC,KAAD,CAAMZ,SAAUY,EAAhB,UACE,UAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,WACE,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,KAAK,QACLC,KAAK,QACLC,MAAOX,EAAOd,OAASe,EAAQf,MAC/B0B,SAAUV,EACVW,OAAQV,EACRV,MAAOM,EAAOb,QAEfc,EAAOd,OAASe,EAAQf,QAAS,uBAAIc,EAAOd,SAE7C,SAACqB,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLC,KAAK,WACLC,MAAOX,EAAOZ,UAAYa,EAAQb,SAClCwB,SAAUV,EACVW,OAAQV,EACRV,MAAOM,EAAOX,WAEfY,EAAOZ,UAAYa,EAAQb,WAAY,uBAAIY,EAAOZ,YACnD,SAAC0B,EAAA,EAAD,CAAQrC,QAAQ,YAAYgC,KAAK,SAAjC,iC,SCzDC,SAASM,IACtB,OACE,iCACE,SAACzC,EAAA,EAAD,CAAOC,KAAM,aACb,SAACK,EAAD","sources":["components/Title/Title.js","components/LoginForm/LoginForm.js","views/LoginView.js"],"sourcesContent":["import { Typography } from '@mui/material';\n\nexport const Title = ({ text }) => {\n  return (\n    <Typography align=\"center\" variant=\"h3\" component=\"h1\" gutterBottom>\n      {text}\n    </Typography>\n  );\n};\n","import { Formik, Form } from 'formik';\nimport { TextField, Container, Button, Stack } from '@mui/material';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  const validationsSchema = yup.object().shape({\n    email: yup.string().email('Incorrect E-Mail Address').required('Required'),\n    password: yup.string().required('Required'),\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        onSubmit={(value, actions) => {\n          const { email, password } = value;\n          dispatch(authOperations.logIn({ email, password }));\n          actions.resetForm();\n        }}\n        validateOnBlur\n        validationSchema={validationsSchema}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        }) => (\n          <Form onSubmit={handleSubmit}>\n            <Stack spacing={2}>\n              <TextField\n                label=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                error={errors.email && touched.email}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.email}\n              />\n              {errors.email && touched.email && <p>{errors.email}</p>}\n\n              <TextField\n                label=\"Password\"\n                type=\"password\"\n                name=\"password\"\n                error={errors.password && touched.password}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.password}\n              />\n              {errors.password && touched.password && <p>{errors.password}</p>}\n              <Button variant=\"contained\" type=\"submit\">\n                Continue\n              </Button>\n            </Stack>\n          </Form>\n        )}\n      </Formik>\n    </Container>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Title } from 'components/Title/Title';\n\nexport default function LoginView() {\n  return (\n    <>\n      <Title text={'Sign in'} />\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["Title","text","align","variant","component","gutterBottom","LoginForm","dispatch","useDispatch","validationsSchema","yup","shape","email","required","password","Container","maxWidth","initialValues","onSubmit","value","actions","authOperations","resetForm","validateOnBlur","validationSchema","values","errors","touched","handleChange","handleBlur","handleSubmit","Stack","spacing","TextField","label","type","name","error","onChange","onBlur","Button","LoginView"],"sourceRoot":""}